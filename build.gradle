plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.6'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'org.asciidoctor.convert' version '1.5.9.2'

}

apply plugin: 'io.spring.dependency-management'


group = 'com.api'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
    testImplementation 'org.projectlombok:lombok:1.18.22'

    compileOnly 'org.projectlombok:lombok'
	implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'mysql:mysql-connector-java'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation "org.testcontainers:mysql:1.17.6"
	testImplementation "org.testcontainers:junit-jupiter:1.17.6"
	testImplementation "org.testcontainers:testcontainers:1.17.6"
	implementation "org.testcontainers:jdbc:1.17.6"

	implementation 'org.mapstruct:mapstruct:1.4.2.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
	testAnnotationProcessor "org.mapstruct:mapstruct-processor:1.2.0.Final"

//	asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor'
//	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
//
//
//	implementation 'io.springfox:springfox-boot-starter:3.0.0'
//	implementation 'io.swagger.core.v3:swagger-jaxrs2:2.1.10'

//	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
	implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'

	// query DSL
	implementation 'com.querydsl:querydsl-jpa'
	implementation 'com.querydsl:querydsl-apt'

	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'

}

def querydslSrcDir = 'src/main/generated'
sourceSets {
	main {
		java {
			srcDirs += [ querydslSrcDir ]
		}
	}
}
compileJava {
	options.compilerArgs << '-Aquerydsl.generatedAnnotationClass=javax.annotation.Generated'
}
tasks.withType(JavaCompile).configureEach {
	options.generatedSourceOutputDirectory = file(querydslSrcDir)
}

clean {
	// clean 실행 시 생성된 QClass 삭제
	delete file(querydslSrcDir)
}

ext {
	snippetsDir = file('build/generated-snippets')
}

test {
	exclude '**/service/**'
	systemProperty 'spring.profiles.active', 'test'
//	outputs.dir snippetsDir
}

asciidoctor {
//	inputs.dir snippetsDir
//	print('test'+ snippetsDir + '\n')
//	print('test2'+ file('build/generated-snippets') + '\n')
//	inputs.dir snippetsDir
//	outputDir = file('${buildDir}/docs')
//	print('test3' + outputDir)
	dependsOn test
}

bootJar {
	dependsOn asciidoctor
//	print("${asciidoctor.outputDir}")
//	from ("${asciidoctor.outputDir}") {
//		into 'docs'
//	}

	from ("${asciidoctor.outputDir}") { // (4)
		into 'static/docs'
	}
}

tasks.named('test') {
	useJUnitPlatform()
	testLogging {
		exceptionFormat "full"
		events "started", "skipped", "passed", "failed"
		showStandardStreams true
	}
}

